name: 🚀 Deploy Galaxy Advanced Game

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOTNET_VERSION: '7.0.x'
  NODE_VERSION: '18.x'

jobs:
  build-and-test:
    name: 🏗️ Build & Test Galaxy Game
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📦 Restore dependencies
      run: dotnet restore
      
    - name: 🛠️ Build project
      run: dotnet build --configuration Release --no-restore
      
    - name: 🧪 Run tests
      run: dotnet test --verbosity normal --logger "console;verbosity=detailed"
      
    - name: 📊 Code coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.cobertura.xml

  deploy-android:
    name: 📱 Deploy to Android
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 🔧 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 📦 Install MAUI
      run: |
        dotnet workload install android
        dotnet workload install maui-android
        
    - name: 🏗️ Build Android APK
      run: |
        dotnet publish GalaxyAdvancedGame.csproj \
          -c:Release \
          -f:net7.0-android \
          -p:AndroidPackageFormat=apk \
          -p:AndroidSigningKeyPass=keystore_password \
          -p:AndroidSigningStorePass=keystore_password \
          --output ./android-build
          
    - name: 📱 Sign APK
      run: |
        jarsigner -verbose \
          -sigalg SHA256withRSA \
          -digestalg SHA-256 \
          -keystore ./android.keystore \
          ./android-build/com.galaxy.advanced.game-Signed.apk \
          galaxy_game_key
          
    - name: 🚀 Deploy to Play Store
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: com.galaxy.advanced.game
        releaseFiles: ./android-build/*.apk
        track: internal
        status: completed

  deploy-web:
    name: 🌐 Deploy to Web
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 🏗️ Build Blazor WebAssembly
      run: |
        dotnet publish GalaxyAdvancedGame.csproj \
          -c:Release \
          -f:net7.0 \
          --output ./web-build
          
    - name: 📦 Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "./web-build/wwwroot"
        output_location: "."

  performance-test:
    name: ⚡ Performance Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🎯 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 🧪 Run performance tests
      run: |
        dotnet run --project PerformanceTests.csproj \
          --configuration Release \
          --logger "console;verbosity=detailed"
          
    - name: 📊 Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: ./performance-results/

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Run security scan
      uses: github/codeql-action/analyze@v2
      with:
        languages: csharp, javascript
        
    - name: 🛡️ Dependency vulnerability scan
      uses: dependency-review-action@v3

  notify:
    name: 📢 Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-android, deploy-web]
    if: always()
    
    steps:
    - name: 📱 Send Telegram notification
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          🚀 **Galaxy Advanced Game Deployment**
          
          ✅ Android: ${{ needs.deploy-android.result }}
          ✅ Web: ${{ needs.deploy-web.result }}
          ✅ Performance: ${{ needs.performance-test.result }}
          ✅ Security: ${{ needs.security-scan.result }}
          
          📊 Build: ${{ github.run_number }}
          🔗 Commit: ${{ github.sha }}
          
    - name: 📧 Send email notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Galaxy Game Deployment Result"
        body: |
          Deployment completed for Galaxy Advanced Game
          
          Results:
          - Android: ${{ needs.deploy-android.result }}
          - Web: ${{ needs.deploy-web.result }}
          - Build: ${{ github.run_number }}
        to: ${{ secrets.DEPLOYMENT_EMAIL }}
        from: Galaxy Game CI

# وابستگی‌های گردش کار
permissions:
  contents: read
  packages: write
  security-events: write

# کش برای بهبود عملکرد
cache:
  paths:
    - ~/.nuget/packages
    - ~/.android/
    - node_modules/
